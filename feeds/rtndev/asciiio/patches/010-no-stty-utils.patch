--- a/bin/asciiio.py	2012-05-15 16:08:38.000000000 +0400
+++ b/bin/asciiio.py	2012-05-15 15:47:48.000000000 +0400
@@ -20,10 +20,10 @@
 import ConfigParser
 import uuid
 import shutil
+import string
 
 SCRIPT_NAME = os.path.basename(sys.argv[0])
-BASE_DIR = os.path.expanduser("~/.ascii.io")
-
+BASE_DIR = "/opt/etc/ascii.io"
 
 class AsciiCast(object):
     QUEUE_DIR = BASE_DIR + "/queue"
@@ -69,8 +69,9 @@
         username = os.environ['USER']
         shell = os.environ['SHELL']
         term = os.environ['TERM']
-        lines = int(self._get_cmd_output(['tput', 'lines']))
-        columns = int(self._get_cmd_output(['tput', 'cols']))
+        term_size = string.split(self._get_cmd_output(['stty','size']),' ')
+        lines = int(term_size[0])
+        columns = int(term_size[1])
 
         data = {
             'username'   : username,
@@ -153,7 +154,12 @@
         return success
 
     def reset_terminal(self):
-        subprocess.call(["reset"])
+        term_size = string.split(self._get_cmd_output(['stty','size']),' ')
+        lines = int(term_size[0])
+        line = 0
+        while line < lines:
+            sys.stdout.write("\n")
+            line = line + 1
 
     def _open_files(self):
         self.stdout_file = TimedFile(self.path + '/stdout')
@@ -274,6 +280,10 @@
             n = os.write(self.master_fd, data)
             data = data[n:]
 
+    def _get_cmd_output(self, args):
+        process = subprocess.Popen(args, stdout=subprocess.PIPE)
+        return process.communicate()[0].strip()
+
 
 class Uploader(object):
     '''Asciicast uploader.
@@ -394,7 +404,7 @@
     config.add_section('api')
     config.add_section('record')
 
-    cfg_file = os.path.expanduser('~/.ascii.io/config')
+    cfg_file = BASE_DIR +"/config"
     try:
         config.read(cfg_file)
     except ConfigParser.ParsingError:
