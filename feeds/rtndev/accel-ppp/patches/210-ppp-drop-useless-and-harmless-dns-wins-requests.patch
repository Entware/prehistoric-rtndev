From e2359499d1b896fa00c1a421537cd7650e629848 Mon Sep 17 00:00:00 2001
From: Vladislav Grishenko <themiron@mail.ru>
Date: Sun, 11 Nov 2012 04:51:21 +0600
Subject: [PATCH] ppp: drop useless and harmless dns & wins requests

---
 accel-pppd/ppp/ipcp_opt_dns.c  |   44 ++++++++-------------------------------
 accel-pppd/ppp/ipcp_opt_wins.c |   43 +++++++-------------------------------
 2 files changed, 17 insertions(+), 70 deletions(-)

diff --git a/accel-pppd/ppp/ipcp_opt_dns.c b/accel-pppd/ppp/ipcp_opt_dns.c
index a62fc49..77f8fca 100644
--- a/accel-pppd/ppp/ipcp_opt_dns.c
+++ b/accel-pppd/ppp/ipcp_opt_dns.c
@@ -19,7 +19,6 @@ static void dns_free(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt);
 static int dns_send_conf_req(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt, uint8_t *ptr);
 static int dns_send_conf_nak(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt, uint8_t *ptr);
 static int dns_recv_conf_req(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt, uint8_t *ptr);
-static int dns_recv_conf_rej(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt, uint8_t *ptr);
 static void dns1_print(void (*print)(const char *fmt,...), struct ipcp_option_t*, uint8_t *ptr);
 static void dns2_print(void (*print)(const char *fmt,...), struct ipcp_option_t*, uint8_t *ptr);
 
@@ -27,7 +26,6 @@ struct dns_option_t
 {
 	struct ipcp_option_t opt;
 	in_addr_t addr;
-	int rejected;
 };
 
 static struct ipcp_option_handler_t dns1_opt_hnd = {
@@ -35,7 +33,6 @@ static struct ipcp_option_handler_t dns1_opt_hnd = {
 	.send_conf_req = dns_send_conf_req,
 	.send_conf_nak = dns_send_conf_nak,
 	.recv_conf_req = dns_recv_conf_req,
-	.recv_conf_rej = dns_recv_conf_rej,
 	.free = dns_free,
 	.print = dns1_print,
 };
@@ -45,7 +42,6 @@ static struct ipcp_option_handler_t dns2_opt_hnd = {
 	.send_conf_req = dns_send_conf_req,
 	.send_conf_nak = dns_send_conf_nak,
 	.recv_conf_req = dns_recv_conf_req,
-	.recv_conf_rej = dns_recv_conf_rej,
 	.free = dns_free,
 	.print = dns2_print,
 };
@@ -56,6 +52,8 @@ static struct ipcp_option_t *dns1_init(struct ppp_ipcp_t *ipcp)
 	memset(dns_opt, 0, sizeof(*dns_opt));
 	dns_opt->opt.id = CI_DNS1;
 	dns_opt->opt.len = 6;
+	if (conf_dns1)
+		dns_opt->addr = conf_dns1;
 
 	return &dns_opt->opt;
 }
@@ -66,6 +64,8 @@ static struct ipcp_option_t *dns2_init(struct ppp_ipcp_t *ipcp)
 	memset(dns_opt, 0, sizeof(*dns_opt));
 	dns_opt->opt.id = CI_DNS2;
 	dns_opt->opt.len = 6;
+	if (conf_dns2)
+		dns_opt->addr = conf_dns2;
 
 	return &dns_opt->opt;
 }
@@ -79,26 +79,18 @@ static void dns_free(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt)
 
 static int dns_send_conf_req(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt, uint8_t *ptr)
 {
-	struct dns_option_t *dns_opt = container_of(opt, typeof(*dns_opt), opt);
-	struct ipcp_opt32_t *opt32 = (struct ipcp_opt32_t *)ptr;
-
-	if (!dns_opt->addr || dns_opt->rejected)
-		return 0;
-	
-	opt32->hdr.id = dns_opt->opt.id;
-	opt32->hdr.len = 6;
-	opt32->val = 0;
-
-	return 6;
+	return 0;
 }
 
 static int dns_send_conf_nak(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt, uint8_t *ptr)
 {
 	struct dns_option_t *dns_opt = container_of(opt, typeof(*dns_opt), opt);
 	struct ipcp_opt32_t *opt32 = (struct ipcp_opt32_t *)ptr;
+
 	opt32->hdr.id = dns_opt->opt.id;
 	opt32->hdr.len = 6;
 	opt32->val = dns_opt->addr;
+
 	return 6;
 }
 
@@ -110,17 +102,8 @@ static int dns_recv_conf_req(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt,
 	if (opt32->hdr.len != 6)
 		return IPCP_OPT_REJ;
 
-	if (!dns_opt->addr)	{
-		if (dns_opt->opt.id == CI_DNS1 && conf_dns1)
-			dns_opt->addr=conf_dns1;
-		else if (dns_opt->opt.id == CI_DNS2 && conf_dns2)
-			dns_opt->addr=conf_dns2;
-		
-		if (!dns_opt->addr) {
-			dns_opt->addr = opt32->val;
-			return IPCP_OPT_ACK;
-		}
-	}
+	if (!dns_opt->addr)
+		dns_opt->addr = opt32->val;
 
 	if (dns_opt->addr == opt32->val)
 		return IPCP_OPT_ACK;
@@ -128,15 +111,6 @@ static int dns_recv_conf_req(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt,
 	return IPCP_OPT_NAK;
 }
 
-static int dns_recv_conf_rej(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt, uint8_t *ptr)
-{
-	struct dns_option_t *dns_opt = container_of(opt, typeof(*dns_opt), opt);
-
-	dns_opt->rejected = 1;
-
-	return 0;
-}
-
 static void dns1_print(void (*print)(const char *fmt,...), struct ipcp_option_t *opt, uint8_t *ptr)
 {
 	struct dns_option_t *dns_opt = container_of(opt, typeof(*dns_opt), opt);
diff --git a/accel-pppd/ppp/ipcp_opt_wins.c b/accel-pppd/ppp/ipcp_opt_wins.c
index d549722..3190646 100644
--- a/accel-pppd/ppp/ipcp_opt_wins.c
+++ b/accel-pppd/ppp/ipcp_opt_wins.c
@@ -19,7 +19,6 @@ static void wins_free(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt);
 static int wins_send_conf_req(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt, uint8_t *ptr);
 static int wins_send_conf_nak(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt, uint8_t *ptr);
 static int wins_recv_conf_req(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt, uint8_t *ptr);
-static int wins_recv_conf_rej(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt, uint8_t *ptr);
 static void wins1_print(void (*print)(const char *fmt,...), struct ipcp_option_t*, uint8_t *ptr);
 static void wins2_print(void (*print)(const char *fmt,...), struct ipcp_option_t*, uint8_t *ptr);
 
@@ -27,7 +26,6 @@ struct wins_option_t
 {
 	struct ipcp_option_t opt;
 	in_addr_t addr;
-	int rejected;
 };
 
 static struct ipcp_option_handler_t wins1_opt_hnd = {
@@ -35,7 +33,6 @@ static struct ipcp_option_handler_t wins1_opt_hnd = {
 	.send_conf_req = wins_send_conf_req,
 	.send_conf_nak = wins_send_conf_nak,
 	.recv_conf_req = wins_recv_conf_req,
-	.recv_conf_rej = wins_recv_conf_rej,
 	.free = wins_free,
 	.print = wins1_print,
 };
@@ -45,7 +42,6 @@ static struct ipcp_option_handler_t wins2_opt_hnd = {
 	.send_conf_req = wins_send_conf_req,
 	.send_conf_nak = wins_send_conf_nak,
 	.recv_conf_req = wins_recv_conf_req,
-	.recv_conf_rej = wins_recv_conf_rej,
 	.free = wins_free,
 	.print = wins2_print,
 };
@@ -56,6 +52,8 @@ static struct ipcp_option_t *wins1_init(struct ppp_ipcp_t *ipcp)
 	memset(wins_opt, 0, sizeof(*wins_opt));
 	wins_opt->opt.id = CI_WINS1;
 	wins_opt->opt.len = 6;
+	if (conf_wins1)
+		wins_opt->addr = conf_wins1;
 
 	return &wins_opt->opt;
 }
@@ -66,6 +64,8 @@ static struct ipcp_option_t *wins2_init(struct ppp_ipcp_t *ipcp)
 	memset(wins_opt, 0, sizeof(*wins_opt));
 	wins_opt->opt.id = CI_WINS2;
 	wins_opt->opt.len = 6;
+	if (conf_wins2)
+		wins_opt->addr = conf_wins2;
 
 	return &wins_opt->opt;
 }
@@ -79,17 +79,7 @@ static void wins_free(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt)
 
 static int wins_send_conf_req(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt, uint8_t *ptr)
 {
-	struct wins_option_t *wins_opt = container_of(opt, typeof(*wins_opt), opt);
-	struct ipcp_opt32_t *opt32 = (struct ipcp_opt32_t *)ptr;
-
-	if (!wins_opt->addr || wins_opt->rejected)
-		return 0;
-	
-	opt32->hdr.id = wins_opt->opt.id;
-	opt32->hdr.len = 6;
-	opt32->val = 0;
-
-	return 6;
+	return 0;
 }
 
 static int wins_send_conf_nak(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt, uint8_t *ptr)
@@ -99,6 +89,7 @@ static int wins_send_conf_nak(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt
 	opt32->hdr.id = wins_opt->opt.id;
 	opt32->hdr.len = 6;
 	opt32->val = wins_opt->addr;
+
 	return 6;
 }
 
@@ -110,17 +101,8 @@ static int wins_recv_conf_req(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt
 	if (opt32->hdr.len != 6)
 		return IPCP_OPT_REJ;
 
-	if (!wins_opt->addr)	{
-		if (wins_opt->opt.id == CI_WINS1 && conf_wins1)
-			wins_opt->addr=conf_wins1;
-		else if (wins_opt->opt.id == CI_WINS2 && conf_wins2)
-			wins_opt->addr=conf_wins2;
-		
-		if (!wins_opt->addr) {
-			wins_opt->addr = opt32->val;
-			return IPCP_OPT_ACK;
-		}
-	}
+	if (!wins_opt->addr)
+		wins_opt->addr = opt32->val;
 
 	if (wins_opt->addr == opt32->val)
 		return IPCP_OPT_ACK;
@@ -128,15 +110,6 @@ static int wins_recv_conf_req(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt
 	return IPCP_OPT_NAK;
 }
 
-static int wins_recv_conf_rej(struct ppp_ipcp_t *ipcp, struct ipcp_option_t *opt, uint8_t *ptr)
-{
-	struct wins_option_t *wins_opt = container_of(opt, typeof(*wins_opt), opt);
-
-	wins_opt->rejected = 1;
-
-	return 0;
-}
-
 static void wins1_print(void (*print)(const char *fmt,...), struct ipcp_option_t *opt, uint8_t *ptr)
 {
 	struct wins_option_t *wins_opt = container_of(opt, typeof(*wins_opt), opt);
-- 
1.7.2.5

